#!/bin/sh

#######################################################################
#
#  __  __            _    _ _
# |  \/  |_   _     / \  | (_) __ _ ___  ___  ___
# | |\/| | | | |   / _ \ | | |/ _` / __|/ _ \/ __|
# | |  | | |_| |  / ___ \| | | (_| \__ \  __/\__ \
# |_|  |_|\__, | /_/   \_\_|_|\__,_|___/\___||___/
#         |___/
#
#######################################################################
##

# Use neovim for vim if present.
[ -x "$(command -v nvim)" ] && alias vim="nvim" vimdiff="nvim -d"

# Use $XINITRC variable if file exists.
[ -f "$XINITRC" ] && alias startx="startx $XINITRC"

[ -f "$MBSYNCRC" ] && alias mbsync="mbsync -c $MBSYNCRC"

# sudo not required for some system commands
for command in mount umount sv pacman updatedb su shutdown poweroff reboot ; do
	alias $command="sudo $command"
done; unset command

se() {
	choice="$(find ~/.local/bin -mindepth 1 -printf '%P\n' | fzf)"
	[ -f "$HOME/.local/bin/$choice" ] && $EDITOR "$HOME/.local/bin/$choice"
	;}

# Verbosity and settings that you pretty much just always are going to want.
alias \
	cp="cp -iv" \
	mv="mv -iv" \
	rm="rm -vI" \
	bc="bc -ql" \
	rsync="rsync -vrPlu" \
	mkd="mkdir -pv" \
	yt="yt-dlp --embed-metadata -i" \
	yta="yt -x -f bestaudio/best" \
	ytt="yt --skip-download --write-thumbnail" \
	ffmpeg="ffmpeg -hide_banner"

# Colorize commands when possible.
alias \
	ls="ls -hN --color=auto --group-directories-first" \
	grep="grep --color=auto" \
	diff="diff --color=auto" \
	ccat="highlight --out-format=ansi" \
	ip="ip -color=auto"

# These common commands are just too long! Abbreviate them.
alias \
	ka="killall" \
	g="git" \
	trem="transmission-remote" \
	YT="youtube-viewer" \
	sdn="shutdown -h now" \
	e="$EDITOR" \
	v="$EDITOR" \
	sv="sudo $EDITOR" \
	p="sudo pacman" \
	a="yay" \
	xi="sudo xbps-install" \
	xr="sudo xbps-remove -R" \
	xq="xbps-query" \
	z="zathura" \
	fontUpdate="sudo fc-cache -f -v" \
	fontSearch="sudo fc-list | grep -i "$1""\
	q='exit' \
 	au='ncdu' \
 	ai='inxi' \
	sysInfo="inxi -Fz" \
	o="open"

alias \
	lf="lfub" \
	magit="nvim -c MagitOnly" \
	ref="shortcuts >/dev/null; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/shortcutrc ; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/zshnameddirrc ; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/aliasrc" \
	weath="less -S ${XDG_CACHE_HOME:-$HOME/.cache}/weatherreport" \
    cat="bat" \
    df="duf" \
    fd="find"


## Pipe Aliases (Global)
alias gr="grep --color -E '$1' '$2'"
alias -g L='|less'
alias -g G='|grep'
alias -g T='|tail'
alias -g H='|head'
alias -g W='|wc -l'
alias -g S='|sort'
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias lastl='last | head -5 | tr -s " "' # Last log-ins
alias -g NUL="> /dev/null 2>&1"alias hgrep="fc -El 0 | grep"
# yt-dlp or yt-dlp

alias \
    yta-aac="yt-dlp --extract-audio --audio-format aac " \
    yta-best="yt-dlp --extract-audio --audio-format best " \
    yta-flac="yt-dlp --extract-audio --audio-format flac " \
    yta-m4a="yt-dlp --extract-audio --audio-format m4a " \
    yta-mp3="yt-dlp --extract-audio --audio-format mp3 " \
    yta-opus="yt-dlp --extract-audio --audio-format opus " \
    yta-vorbis="yt-dlp --extract-audio --audio-format vorbis " \
    yta-wav="yt-dlp --extract-audio --audio-format wav " \
    ytv-best="yt-dlp -f bestvideo+bestaudio " \
    yta="yt-dlp -x -f bestaudio/best" \
    yt="yt-dlp --add-metadata -i" \
    yts="yt-dlp --add-metadata -i --sub-lang ru --write-auto-sub --sub-format srt"

##############################################
#
#		Misc [ FUNCTION ]
#
##############################################

ytta() {
	echo "[ Download & convert to mp3 from textfile ]"
	yt-dlp -f bestaudio --extract-audio --audio-format mp3 --audio-quality 0 \
	--metadata-from-title  "(?P<artist>.+?) - (?P<title>.+)"  \
	--embed-thumbnail --add-metadata -o "~/Documents/Music/%(title)s.%(ext)s" \
	--batch-file "/home/jsn/Downloads/yt.txt" "${@}" &&
		trash-put ~/Downloads/yt.txt
	}

mime() { file --mime-type "$1" ;}
fs(){ sudo fc-cache -f -v ;}
cla(){
	xprop | awk '
	/^WM_CLASS/{sub(/.* =/, "instance:"); sub(/,/, "\nclass:"); print}
	/^WM_NAME/{sub(/.* =/, "title:"); print}'
}

clA(){
    wmctrl -xl | sed 's/.*\(\.\w\+\).*/\1/; s/\.//'
}

csv (){
    if [ $# -ne 1 ]; then
    echo "Usage: csv <filename>"
    return
  fi

    less $1 | sed -e 's/,,/, ,/g' | column -s, -t | less -#5 -N -S
}

## rename file ' ' >> '_' ( 1 file )
## –û–±–æ–ª–æ—á–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç *.* –∫–æ –≤—Å–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Ñ–∞–π–ª–∞–º. (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏)
r_()
{
	mv "$1" $(echo "$1"|tr " " _)\
}


## -- START -------------- find && rename in vimv
	rr()
	{
	    REDBG="\033[0;41m"
	    reset="\e[0m" ;
	    blink="\e[5m" ;
			if [[ ! -z "$1" ]]
			then
					eval vimv "'$*'"
					clear
					ls -a
			else
					echo -e "${blink}${REDBG} —Ç–∞–∫–æ–≥–æ ^(0_0)^ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, \
							   –º–æ–∂–µ—Ç —ç—Ç–æ —á–∞—Å—Ç—å ^(0_0)^ ${reset} "
			fi
	}


# fullsite downloads
site()
{
		wget --page-requisites -r -l 2 "$@"
}

## vinote record write ....
vin(){
dir="/tmp/vinote"
Cyan="\e[96m" ;reset="\e[0m"
while true; do
	echo " press ( s ) >> preview { .../tmp/vinote/* } "
	echo " press ( o ) >> open last file"
	echo " press ( m ) >> delete { .../tmp/vinote/* } "
       	read choi
	case "$choi" in
		s) clear; echo -e "${Cyan}`ls /tmp/vinote/ | sort -r`${reset}" ;;
        o) find $dir | sort -r | head -n 1 | xargs -I {} $EDITOR "{}" ; break;;
        m) sudo rm -rf $dir/*; ls -la /tmp/vinote/ | sort -r ; break;;
    esac
done
}

db_remove() { sudo rm -rf /var/lib/pacman/db.lck ;}

IP(){
while true; do

	echo "___________________________________"
	echo "Main Menu"
	echo "___________________________________"
	echo "[s] üëÄ –í–Ω–µ—à–Ω. IP"
	echo "[r] üëÄ  show IP address of an router"
	echo "[v] üëÄ –í–Ω—É—Ç—Ä. IP"
	echo "[q] Exit/Stop"
	echo "===================================="
       	read choi
	case "$choi" in
		s)echo "Your public ip is:\n `curl ifconfig.me`"; sleep 3s ;clear;;
		v)echo `cat /etc/resolv.conf | head -2 | grep "nameserver" | sed -e "s/nameserver/My internal IP:  /"`; sleep 3s ;clear ;;
		r)echo `ifconfig "wlan0" | grep -Eom1 'inet ([0-9]{1,3}\.){3}[0-9]{1,3}' | cut -d: -f2`; sleep 4;clear;;
		q) exit 0;;
		*) echo "Press a key...";read;;
	esac
done
}

duh() {
  # shows disk utilization for a path and depth level
  path="${1:-$PWD}"
  level="${2:-1}"
  /usr/bin/du -h --max-depth="$level" $path
}


conve_png_svg(){
	File_png="${1?:Usage: $0 $1}"

if [[ ! -s "$File_png" ]]; then
  echo >&2 "The first argument ($File_png)"
  echo >&2 "must be a file having a size greater than zero"
  ( set -x ; ls -s "$File_png" )
  exit 1
fi

File="${File_png%.*}"

convert "$File_png" "$File.pnm"        # PNG to PNM
potrace "$File.pnm" -s -o "$File.svg"  # PNM to SVG
rm "$File.pnm"                         # Remove PNM
}


## translate-shell
tlr(){
	ii=$(trans -b :ru "$*")
	echo -e "\x22 ${ii} \x22"
}
tle(){
	ii=$(trans -b :en "$*")
	echo -e "\x22 ${ii} \x22"
}

## stardict
alias sae="sdcv -u \"Full Russian-English\""
alias sar="sdcv -u \"Full English-Russian\""

tl(){
    # sdcv -u "–ê–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å –ú—é–ª–ª–µ—Ä–∞, 7-—è —Ä–µ–¥., —Å —É–¥–∞—Ä–µ–Ω–∏—è–º–∏" \
    sdcv \
        -n --utf8-output --color "$@" | \
		fold --width=$(tput cols) |\
		less --quit-if-one-screen -RX | lolcat -f
}


# FIND PROCESS
function p(){
        ps aux | grep -i $1 | grep -v grep
}

# KILL ALL
function ka(){

    cnt=$( p $1 | wc -l)  # total count of processes found
    klevel=${2:-15}       # kill level, defaults to 15 if argument 2 is empty

    echo -e "\nSearching for '$1' -- Found" $cnt "Running Processes .. "
    p $1

    echo -e '\nTerminating' $cnt 'processes .. '

    ps aux  |  grep -i $1 |  grep -v grep   | awk '{print $2}' | xargs sudo kill -klevel
    echo -e "Done!\n"

    echo "Running search again:"
    p "$1"
    echo -e "\n"
}
